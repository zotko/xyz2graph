{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"xyz2graph","text":"<p>Welcome to xyz2graph's documentation! This Python package provides tools for reading XYZ molecular structure files and creating interactive 3D visualizations.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Read and parse XYZ molecular structure files</li> <li>Generate interactive 3D molecular visualizations using Plotly</li> <li>Convert molecular structures to NetworkX graphs</li> <li>Command-line interface for quick visualizations</li> </ul>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Python 3.8+</li> <li>NumPy</li> <li>Plotly</li> <li>NetworkX</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install xyz2graph\n</code></pre>"},{"location":"#quick-example","title":"Quick Example","text":"<pre><code>from xyz2graph import MolGraph\n\nmg = MolGraph()\nmg.read_xyz('molecule.xyz')\nfig = mg.to_plotly()\nfig.show()\n</code></pre>"},{"location":"#quick-navigation","title":"Quick Navigation","text":"<ul> <li>Getting Started</li> <li>API Documentation<ul> <li>MolGraph</li> <li>Command Line</li> </ul> </li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will help you get started with xyz2graph.</p>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>Install xyz2graph using pip:</p> <pre><code>pip install xyz2graph\n</code></pre>"},{"location":"getting-started/#basic-usage","title":"Basic Usage","text":""},{"location":"getting-started/#creating-a-molecular-visualization","title":"Creating a Molecular Visualization","text":"<p>The most common use case is to create an interactive 3D visualization of a molecular structure:</p> <pre><code>from xyz2graph import MolGraph\n\n# Create a molecular graph\nmg = MolGraph()\n\n# Read structure from XYZ file\nmg.read_xyz('molecule.xyz')\n\n# Generate and display visualization\nfig = mg.to_plotly()\nfig.show()\n</code></pre>"},{"location":"getting-started/#using-the-command-line","title":"Using the Command Line","text":"<p>For quick visualizations, you can use the command-line interface:</p> <pre><code>xyz2graph molecule.xyz\n</code></pre> <p>This will create an HTML file with the visualization in your current directory.</p>"},{"location":"getting-started/#customization","title":"Customization","text":""},{"location":"getting-started/#changing-colors","title":"Changing Colors","text":"<p>You can customize the appearance of your molecular visualization by changing element colors:</p> <pre><code>mg = MolGraph()\nmg.read_xyz('molecule.xyz')\n\n# Change specific element colors\nmg.set_element_color('O', 'pink')\n\n# Set default color for unspecified elements\nmg.set_default_color('gray')\n\n# Create visualization with custom colors\nfig = mg.to_plotly()\nfig.show()\n</code></pre>"},{"location":"getting-started/#adjusting-atomic-radii","title":"Adjusting Atomic Radii","text":"<p>Modify atomic radii to adjust the visual representation:</p> <pre><code># Change radius for specific elements\nmg.set_element_radius('C', 0.75)\nmg.set_element_radius('H', 0.25)\n</code></pre>"},{"location":"getting-started/#network-analysis","title":"Network Analysis","text":"<p>Convert your molecular structure to a NetworkX graph for analysis:</p> <pre><code># Convert to NetworkX graph\nG = mg.to_networkx()\n\n# Access molecular properties\nprint(f\"Number of atoms: {len(G.nodes)}\")\nprint(f\"Number of bonds: {len(G.edges)}\")\n</code></pre>"},{"location":"getting-started/#xyz-file-format","title":"XYZ File Format","text":"<p>The XYZ file format is a simple text format for molecular structures:</p> <pre><code>3\nWater\nO  0.000000  0.000000  0.000000\nH  0.758602  0.000000  0.504284\nH  0.758602  0.000000 -0.504284\n</code></pre> <p>Where:</p> <ul> <li>First line: Number of atoms</li> <li>Second line: Comment or title</li> <li>Following lines: Element and coordinates (x, y, z) in Angstroms</li> </ul>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<ul> <li>See the API documentation for detailed reference</li> <li>Learn about command-line options for batch processing</li> </ul>"},{"location":"getting-started/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/#file-not-found","title":"File Not Found","text":"<p>If you get a <code>FileNotFoundError</code>, check that:</p> <ul> <li>The XYZ file exists in the specified path</li> <li>You have read permissions for the file</li> <li>The path is correct relative to your working directory</li> </ul>"},{"location":"getting-started/#invalid-file-format","title":"Invalid File Format","text":"<p>If you get a <code>ValueError</code> when reading an XYZ file:</p> <ul> <li>Verify the file follows the XYZ format</li> <li>Check for missing or extra whitespace</li> <li>Ensure coordinates are valid numbers</li> <li>Verify element symbols are valid</li> <li>If your file doesn't have the standard header (atom count and comment), use the <code>xyz_start</code> parameter to specify where coordinates begin:   <pre><code># Start reading from first line (no header)\nmg.read_xyz(\"molecule.xyz\", xyz_start=0)\n\n# Start reading from line 3\nmg.read_xyz(\"molecule.xyz\", xyz_start=3)\n</code></pre></li> </ul> <p>For more specific issues raise an issue on our GitHub repository.</p>"},{"location":"api/cli/","title":"Command Line Interface","text":"<p>The package provides a command-line interface for quick visualization of XYZ files.</p>"},{"location":"api/cli/#basic-usage","title":"Basic Usage","text":"<pre><code># Basic usage - saves visualization as HTML in the same directory\nxyz2graph molecule.xyz\n\n# Specify custom output file\nxyz2graph molecule.xyz --output visualization.html\n\n# Open directly in browser without saving\nxyz2graph molecule.xyz --browser\n\n# Enable debug logging\nxyz2graph molecule.xyz --debug\n</code></pre>"},{"location":"api/cli/#options","title":"Options","text":"<ul> <li><code>xyz_file</code>: Path to the input XYZ file (required)</li> <li><code>-o, --output</code>: Output HTML file path (default: based on input filename)</li> <li><code>-b, --browser</code>: Open visualization in browser without saving</li> <li><code>--debug</code>: Enable debug logging</li> </ul>"},{"location":"api/molgraph/","title":"MolGraph","text":"<p>The <code>MolGraph</code> class is the core component of xyz2graph, providing functionality to read molecular structure data and convert it to different representations.</p>"},{"location":"api/molgraph/#basic-usage","title":"Basic Usage","text":"<pre><code>from xyz2graph import MolGraph\n\n# Create a new molecular graph\nmg = MolGraph()\n\n# Read molecular structure from XYZ file\nmg.read_xyz('molecule.xyz')\n\n# Create visualization\nfig = mg.to_plotly()\nfig.show()\n</code></pre>"},{"location":"api/molgraph/#methods","title":"Methods","text":""},{"location":"api/molgraph/#read_xyz","title":"<code>read_xyz</code>","text":"<p>Reads and parses molecular structure data from an XYZ file. <pre><code>mg.read_xyz('molecule.xyz')\n</code></pre></p> <ul> <li><code>file_path</code> (str or Path): Path to the XYZ file</li> <li><code>xyz_start</code> (int): Line number where coordinates start (default: 2)</li> <li><code>validate</code> (bool): Validate atom count against file header (default: False)</li> </ul>"},{"location":"api/molgraph/#to_plotly","title":"<code>to_plotly</code>","text":"<p>Creates a plotly figure with interactive 3D visualization of the molecule. <pre><code>fig = mg.to_plotly()\n</code></pre></p> <ul> <li>Returns: Plotly Figure object for 3D visualization</li> </ul>"},{"location":"api/molgraph/#to_networkx","title":"<code>to_networkx</code>","text":"<p>Creates a NetworkX graph representation of the molecule. <pre><code>G = mg.to_networkx()\n</code></pre></p> <ul> <li>Returns: NetworkX Graph object with node and edge attributes</li> </ul>"},{"location":"api/molgraph/#formula","title":"<code>formula</code>","text":"<p>Returns the molecular formula using Hill notation convention. <pre><code>formula = mg.formula()\nprint(formula)  # e.g., \"CH4O\"\n</code></pre></p> <ul> <li>Returns: str, molecular formula</li> </ul>"},{"location":"api/molgraph/#set_element_radius","title":"<code>set_element_radius</code>","text":"<p>Sets the reference radius for a specific element. <pre><code>mg.set_element_radius('C', 0.75)  # Set carbon atom radius\n</code></pre></p> <ul> <li><code>element</code> (str): Chemical element symbol</li> <li><code>radius</code> (float): New radius value in Angstroms</li> </ul>"},{"location":"api/molgraph/#set_element_color","title":"<code>set_element_color</code>","text":"<p>Sets the CPK color for a specific element. <pre><code>mg.set_element_color('O', 'red')  # Set oxygen atoms to red\n</code></pre></p> <ul> <li><code>element</code> (str): Chemical element symbol</li> <li><code>color</code> (str): Color name or code accepted by Plotly</li> </ul>"},{"location":"api/molgraph/#set_default_color","title":"<code>set_default_color</code>","text":"<p>Sets the default color for elements without specified colors. <pre><code>mg.set_default_color('gray')\n</code></pre></p> <ul> <li><code>color</code> (str): Color name or code accepted by Plotly</li> </ul>"},{"location":"api/molgraph/#properties","title":"Properties","text":""},{"location":"api/molgraph/#elements","title":"<code>elements</code>","text":"<p>List of chemical element symbols in the molecule</p>"},{"location":"api/molgraph/#bond_lengths","title":"<code>bond_lengths</code>","text":"<p>Dictionary mapping pairs of connected atoms to their bond lengths</p>"},{"location":"api/molgraph/#adj_list","title":"<code>adj_list</code>","text":"<p>Dictionary mapping atom indices to their connected neighbors</p>"},{"location":"api/molgraph/#atomic_radii","title":"<code>atomic_radii</code>","text":"<p>List of atomic radii for each atom in the molecule</p>"},{"location":"api/molgraph/#x-y-z","title":"<code>x, y, z</code>","text":"<p>Lists of coordinates for each atom</p>"},{"location":"api/molgraph/#comment","title":"<code>comment</code>","text":"<p>Optional comment or title from the second line of XYZ file</p> <p>These properties are automatically updated when reading an XYZ file or modifying the molecular structure.</p>"}]}